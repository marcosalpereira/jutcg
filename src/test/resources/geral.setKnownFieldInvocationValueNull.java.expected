package br.gov.esaf.sgc.qqpacote;

import static org.easymock.EasyMock.*;
import org.junit.*;
import java.util.*;
import static org.junit.Assert.*;

/**
 * Testes unitarios para a classe {@link Bean}.
 */
public class TestBean  {

/**
 * Classe sendo testada {@link Bean}.
 */
private Bean bean;

/**
 * Configuracoes iniciais.
 */
@Before
public void setUp() {
  bean = new Bean();
}

/**
 * Cria o mock {@link Var} e seta na classe sendo testada.
 * @return o mock criado
 */
private Var criarMockVar() {
  Var mock = createStrictMock(Var.class);
  bean.setField(mock);
  return mock;
}

/**
 * Teste para o metodo {@link Bean#test()}.
 * Descricao do Fluxo: 
 *     Entra: if(value == null) {.
 */
@Test
public void testTestPath1() {

// Configurando mock
Var field = criarMockVar();
Var value = null;
expect(field.someMethod())
  .andReturn(value);
replay(field);

// invocar metodo sendo testado
bean.test();

// checar estados dos mocks
verify(field);
}

/**
 * Teste para o metodo {@link Bean#test()}.
 * Descricao do Fluxo: 
 * NAO Entra: if(value == null) {.
 */
@Test
public void testTestPath2() {

// Configurando mock
Var field = criarMockVar();
Var value = new Var(1);
expect(field.someMethod())
  .andReturn(value);
replay(field);

// invocar metodo sendo testado
bean.test();

// checar estados dos mocks
verify(field);
}
}
