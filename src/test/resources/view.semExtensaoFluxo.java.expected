package br.view.correcao;

import static org.easymock.EasyMock.*;
import org.junit.*;
import java.util.*;
import static org.junit.Assert.*;

/**
 * Testes unitarios para a classe {@link ManagedBean}.
 */
public class TestManagedBean extends br.view.JsfTestCase {

/**
 * Classe sendo testada {@link ManagedBean}.
 */
private ManagedBean managedBean;

@Override
public void setUp() throws Exception {
  super.setUp();
  managedBean = new ManagedBean();
}

/**
 * Cria o mock {@link Facade} e seta na classe sendo testada.
 * @return o mock criado
 */
private Facade criarMockFacade() {
  Facade mock = createStrictMock(Facade.class);
  managedBean.setFacade(mock);
  return mock;
}

/**
 * Teste para o metodo {@link ManagedBean#pesquisar()}.
 */
@Test
public void testPesquisar() {

// Configurando mock
Facade facade = criarMockFacade();
expect(facade.searchPersons())
  .andReturn(persons);
replay(facade);

// invocar metodo sendo testado
managedBean.pesquisar();

// checar estados dos mocks
verify(facade);

// verificacoes do resultado do metodo sendo testado
final List<Person> getPersonsExpected;
assertEquals(getPersonsExpected, managedBean.getPersons());
}
}
