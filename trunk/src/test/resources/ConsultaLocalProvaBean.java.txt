package br.gov.esaf.sgc.view.consultas;

import java.util.List;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.validator.ValidatorException;

import org.jboss.seam.ScopeType;
import org.jboss.seam.annotations.Factory;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Scope;

import br.gov.esaf.sgc.facade.ConsultaLocalProvaFacade;
import br.gov.esaf.sgc.model.Concurso;
import br.gov.esaf.sgc.model.TipoConsultaNome;
import br.gov.esaf.sgc.model.UsuarioLogado;
import br.gov.esaf.sgc.model.alocacao.AlocacaoInscricao;
import br.gov.esaf.sgc.view.util.UIHelper;
import br.gov.serpro.util.StringHelper;
import br.gov.serpro.view.util.MessageHelper;

/**
 * Bean para o caso de uso Consulta Local de Prova.
 */
@Name("consultaLocalProvaBean")
@Scope(ScopeType.CONVERSATION)
public class ConsultaLocalProvaBean {

    /**
     * Id do componente com o numero da inscricao na tela.
     */
    static final String ID_INPUT_NUMERO_INSCRICAO = "numeroInscricao";

    /**
     * Id do componente com o nome do candidato na tela.
     */
    static final String ID_INPUT_NOME_CANDIDATO = "nomeCandidato";

    /**
     * Concurso Selecionado.
     */
    private Concurso concursoSelecionado;

    /**
     * Numero de Inscricao.
     */
    private String numeroInscricao;

    /**
     * Nome Candidato.
     */
    private String nomeCandidato;

    /**
     * Tipo de consulta pelo nome.
     */
    private TipoConsultaNome tipoConsultaNome = TipoConsultaNome.INICIO;

    /**
     * {@link ConsultaLocalProvaFacade}.
     */

    @In("consultaLocalProvaFacade")
    private ConsultaLocalProvaFacade facade;

    /**
     * Usuário logado.
     */
    @In
    private UsuarioLogado usuarioLogado;

    /**
     * Resultado da pesquisa.
     */
    private List<AlocacaoInscricao> alocacoes;

    public List<AlocacaoInscricao> getAlocacoes() {
        return alocacoes;
    }

    public void setAlocacoes(List<AlocacaoInscricao> alocacoes) {
        this.alocacoes = alocacoes;
    }

    void setFacade(ConsultaLocalProvaFacade facade) {
        this.facade = facade;
    }

    public String getNumeroInscricao() {
        return numeroInscricao;
    }

    public void setNumeroInscricao(String numeroInscricao) {
        this.numeroInscricao = numeroInscricao;
    }

    public String getNomeCandidato() {
        return nomeCandidato;
    }

    public void setNomeCandidato(String nomeCandidato) {
        this.nomeCandidato = nomeCandidato;
    }

    public TipoConsultaNome getTipoConsultaNome() {
        return tipoConsultaNome;
    }

    public void setTipoConsultaNome(TipoConsultaNome tipoConsultaNome) {
        this.tipoConsultaNome = tipoConsultaNome;
    }

    public UsuarioLogado getUsuarioLogado() {
        return usuarioLogado;
    }

    public void setUsuarioLogado(UsuarioLogado usuarioLogado) {
        this.usuarioLogado = usuarioLogado;
    }


    public Concurso getConcursoSelecionado() {
        return concursoSelecionado;
    }

    public void setConcursoSelecionado(Concurso concursoSelecionado) {
        this.concursoSelecionado = concursoSelecionado;
    }

    /**
     * Lista de Concursos.
     * @return lista de concursos
     */
    @Factory("consultaLocalProvaBean_concursos")
    public List<Concurso> consultarConcursos() {
        return facade.consultarConcursosAndamento(usuarioLogado);
    }

    /**
     * Consultar os candidatos com os locais de prova.
     */
    public void pesquisar() {
        this.alocacoes = facade.consultarAlocacoesLocalProva(concursoSelecionado,
            usuarioLogado, numeroInscricao, nomeCandidato,
            tipoConsultaNome);

        if (this.alocacoes.size() == 201) {
            //mostrar apenas os 200 primeiros
            //TODO certificar se nao remove do bco
            this.alocacoes.remove(200);

            MessageHelper.addInfoMessage(ID_INPUT_NOME_CANDIDATO,
                "page.consultaLocalProva.msg.refineConsulta");
        }
    }

    /**
     * TODO Imprimir.
     */
    public void imprimir() {
    }


}
